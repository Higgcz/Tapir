//
//  TSLWorld.m
//  Tapir
//
//  Created by Vojtech Micka on 26.04.14.
//  Copyright (c) 2014 Vojtech Micka. All rights reserved.
//

#import "TSLUniverse.h"

#import "TSLConfiguration.h"
#import "TSLEnvironment.h"

@interface TSLUniverse ()

- (void) setup;

@end

@implementation TSLUniverse

#pragma mark - Initialization & Creation

////////////////////////////////////////////////////////////////////////////////////////////////
- (instancetype) initWithConfiguration:(TSLConfiguration *) configuration
////////////////////////////////////////////////////////////////////////////////////////////////
{
    self = [super init];
    if (self) {
        self.configuration = configuration;
        [self setup];
    }
    return self;
}

////////////////////////////////////////////////////////////////////////////////////////////////
- (instancetype) initWithConfigurationDict:(NSDictionary *)configuration
////////////////////////////////////////////////////////////////////////////////////////////////
{
    self = [super init];
    if (self) {
        self.configuration = [TSLConfiguration createWithConfigurationDict:configuration];
        [self setup];
    }
    return self;
}

////////////////////////////////////////////////////////////////////////////////////////////////
+ (TSLUniverse *) createWithConfiguration:(TSLConfiguration *)configuration
////////////////////////////////////////////////////////////////////////////////////////////////
{
    return [[TSLUniverse alloc] initWithConfiguration:configuration];
}

////////////////////////////////////////////////////////////////////////////////////////////////
+ (TSLUniverse *) createWithConfigurationDict:(NSDictionary *)configuration
////////////////////////////////////////////////////////////////////////////////////////////////
{
    return [[TSLUniverse alloc] initWithConfigurationDict:configuration];
}

//////////////////////////////////////////////////////////////////////////////////////////////////
- (void) setup
//////////////////////////////////////////////////////////////////////////////////////////////////
{
    // Setting self as delegate
    self.delegate = self;
    
    // create environment
    self.enviroment = [TSLEnvironment createInUniverse:self];
}

#pragma mark - Updating

////////////////////////////////////////////////////////////////////////////////////////////////
- (void) updateWithTimeSinceLastUpdate:(CFTimeInterval) interval
////////////////////////////////////////////////////////////////////////////////////////////////
{
    [self.enviroment updateWithTimeSinceLastUpdate:interval];
}

#pragma mark - Delegation methods

////////////////////////////////////////////////////////////////////////////////////////////////
- (void) didEvaluateUpdate
////////////////////////////////////////////////////////////////////////////////////////////////
{}

////////////////////////////////////////////////////////////////////////////////////////////////
- (void) didSimulatePhysics
////////////////////////////////////////////////////////////////////////////////////////////////
{}

@end